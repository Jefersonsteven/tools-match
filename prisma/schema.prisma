generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id           String        @id @default(uuid())
  firstName    String
  lastName     String
  email        String        @unique
  password     String
  phoneNumber  String?
  address      String?
  city         String?
  country      String?
  profilePhoto Photo?
  publications Publication[]
}

model Photo {
  id            String      @id @default(uuid())
  url           String
  userId        String      @unique
  publicationId String
  createdAt     DateTime    @default(now())
  publication   Publication @relation(fields: [publicationId], references: [id])
  user          User        @relation(fields: [userId], references: [id])
}

model Publication {
  id             String   @id @default(uuid())
  name           String
  description    String
  category       String
  pricePerDay    Float?
  promotionPrice Float?
  type           Type
  available      Boolean
  ownerId        String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  photos         Photo[]
  owner          User     @relation(fields: [ownerId], references: [id])
  reviews        Review[]
}

model Payment {
  id            String   @id @default(uuid())
  paymentDate   DateTime
  amountPaid    Float
  userId        String
  publicationId String
}

model Order {
  id              String    @id @default(uuid())
  orderDate       DateTime
  rentalStartDate DateTime?
  rentalEndDate   DateTime?
  orderStatus     String
  userId          String
  publicationId   String
}

model OrderDetail {
  id            String @id @default(uuid())
  orderId       String
  publicationId String
  quantity      Int
  price         Float
  subtotal      Float
}

model Review {
  id            String      @id @default(uuid())
  userId        String
  publicationId String
  comment       String
  rating        Int
  Publication   Publication @relation(fields: [publicationId], references: [id])
}

enum Type {
  RENT
  SALE
}
